{"version":3,"file":"corePackages/geoview-basemap-panel.js","mappings":"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","sources":["webpack://geoview-core/../geoview-basemap-panel/src/basemap-panel.tsx","webpack://geoview-core/../geoview-basemap-panel/src/index.tsx","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_SetCache.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_arraySome.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsEqual.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseIsEqualDeep.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_cacheHas.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalArrays.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalByTag.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_equalObjects.js","webpack://geoview-core/../../common/temp/node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js"],"sourcesContent":["import { toJsonObject, TypeJsonObject, TypeJsonArray, SelectChangeEvent, TypeWindow } from 'geoview-core';\nimport { mapViewProjectionPayload } from 'geoview-core/src/api/events/payloads';\nimport { TypeBasemapOptions, TypeBasemapProps } from 'geoview-core/src/geo/layer/basemap/basemap-types';\nimport { TypeValidMapProjectionCodes, TypeViewSettings } from 'geoview-core/src/geo/map/map-schema-types';\nimport { isEqual } from 'lodash';\n\nconst w = window as TypeWindow;\n\ninterface BaseMapPanelProps {\n  mapId: string;\n  config: TypeJsonObject;\n}\n\nexport function BasemapPanel(props: BaseMapPanelProps): JSX.Element {\n  const { mapId, config } = props;\n\n  const { cgpv } = w;\n  const { ui, react, api } = cgpv;\n  const myMap = api.map(mapId);\n  const { Select, Card } = ui.elements;\n\n  const { useState, useEffect } = react;\n\n  const [basemapList, setBasemapList] = useState<TypeBasemapProps[]>([]);\n  const [activeBasemapId, setActiveBasemapId] = useState<string>('');\n  const [canSwichProjection] = useState(config.canSwichProjection);\n\n  const useStyles = ui.makeStyles((theme) => ({\n    basemapCard: {\n      backgroundColor: theme.palette.grey.A700,\n      color: theme.palette.primary.light,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundClip: 'padding-box',\n      border: `1px solid ${theme.basemapPanel.borderDefault}`,\n      borderRadius: 6,\n      boxShadow: 'none',\n      marginBottom: 16,\n      transition: 'all 0.3s ease-in-out',\n      '&:last-child': {\n        marginBottom: 0,\n      },\n      '& .MuiCardHeader-root': {\n        backgroundColor: theme.palette.grey.A700,\n        color: theme.basemapPanel.header,\n        fontSize: 14,\n        fontWeight: 400,\n        margin: 0,\n        padding: '0 12px',\n        height: 60,\n        width: '100%',\n        order: 2,\n      },\n      '& .MuiCardContent-root': {\n        order: 1,\n        height: 190,\n        position: 'relative',\n        padding: 0,\n        '&:last-child': {\n          padding: 0,\n        },\n        '& .basemapCardThumbnail': {\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          objectFit: 'cover',\n          top: 0,\n          left: 0,\n        },\n        '& .basemapCardThumbnailOverlay': {\n          display: 'block',\n          height: '100%',\n          width: '100%',\n          position: 'absolute',\n          backgroundColor: theme.basemapPanel.overlayDefault,\n          transition: 'all 0.3s ease-in-out',\n        },\n      },\n      '&:hover': {\n        cursor: 'pointer',\n        borderColor: theme.basemapPanel.borderHover,\n        '& .MuiCardContent-root': {\n          '& .basemapCardThumbnailOverlay': {\n            backgroundColor: theme.basemapPanel.overlayHover,\n          },\n        },\n      },\n      '&.active': {\n        borderColor: theme.basemapPanel.borderActive,\n        '& .MuiCardContent-root': {\n          '& .basemapCardThumbnailOverlay': {\n            backgroundColor: theme.basemapPanel.overlayActive,\n          },\n        },\n        '&:hover': {\n          borderColor: 'rgba(255,255,255,0.75)',\n          '& .MuiCardContent-root': {\n            '& .basemapCardThumbnailOverlay': {\n              backgroundColor: 'rgba(0,0,0,0)',\n            },\n          },\n        },\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  // TODO: change the path for getting projection on schema refactor\n  const projections: number[] =\n    (config.supportedProjections as TypeJsonArray).map((obj: TypeJsonObject) => obj?.projectionCode as number) || [];\n  const [mapProjection, setMapProjection] = useState(myMap.mapFeaturesConfig.map.viewSettings.projection);\n\n  /**\n   * Update the basemap with the layers on the map\n   *\n   * @param {string} basemapId update the basemap on the map\n   */\n  const setBasemap = (basemapId: string) => {\n    // set the new basemap and update the active basemap variable\n    myMap.basemap.setBasemap(basemapId);\n    setActiveBasemapId(basemapId);\n  };\n\n  /**\n   *  Add basemaps from configuration for selected projection\n   *\n   * @param {number} projection the projection to create basemaps for\n   */\n  const createBasemapArray = async (projection: TypeValidMapProjectionCodes) => {\n    const basemapsArray = toJsonObject(\n      (config.supportedProjections as Array<TypeJsonObject>).find((obj: TypeJsonObject) => obj.projectionCode === projection)\n    );\n    let isInit = false;\n\n    // reset the basemaps array\n    myMap.basemap.basemaps = [];\n    setBasemapList([]);\n\n    // create basemap from basemapOptions in config\n    const configBasemapOptions = myMap.mapFeaturesConfig.map.basemapOptions;\n    const configBasemap = await myMap.basemap.createCoreBasemap(configBasemapOptions as unknown as TypeBasemapOptions, projection);\n    if (configBasemap) setBasemapList([configBasemap]);\n\n    // create the custom config basemap\n    for (let basemapIndex = 0; basemapIndex < (basemapsArray.customBasemaps.length as number); basemapIndex++) {\n      if (!isEqual(basemapsArray.customBasemaps[basemapIndex], configBasemapOptions)) {\n        const customBasemap = basemapsArray.customBasemaps[basemapIndex] as TypeJsonObject;\n        const basemap = myMap.basemap.createCustomBasemap(customBasemap as unknown as TypeBasemapProps);\n        if (basemap) setBasemapList((prevArray) => [...prevArray, basemap]);\n\n        // custom basemap are provided set it by default (can't be set as basemap from geoview config)\n        if (basemap && basemapIndex === 0 && activeBasemapId === '') {\n          setBasemap(basemap.basemapId!);\n          isInit = true;\n        }\n      }\n    }\n\n    // create the core basemap\n    for (let basemapIndex = 0; basemapIndex < (basemapsArray.coreBasemaps.length as number); basemapIndex++) {\n      if (!isEqual(basemapsArray.coreBasemaps[basemapIndex], configBasemapOptions)) {\n        const basemapOptions = basemapsArray.coreBasemaps[basemapIndex] as TypeJsonObject;\n        // eslint-disable-next-line no-await-in-loop\n        const basemap = await myMap.basemap.createCoreBasemap(basemapOptions as unknown as TypeBasemapOptions, projection);\n        if (basemap) setBasemapList((prevArray) => [...prevArray, basemap]);\n\n        // set basemap if previously selected in previous projection\n        const id = `${basemapOptions.shaded ? 'shaded' : ''}${basemapOptions.id}${basemapOptions.labeled ? 'label' : ''}`;\n        if (basemap && id === activeBasemapId && !isInit) {\n          setBasemap(activeBasemapId);\n          isInit = true;\n        }\n      }\n    }\n\n    // if previous basemap does not exist in previous projection, init first one\n    if (!isInit) setBasemap(myMap.basemap.basemaps[0].basemapId as string);\n  };\n\n  /**\n   * Set new projection view and basemap array\n   *\n   * @param {SelectChangeEvent} event select change element event\n   */\n  const setSelectedProjection = (event: SelectChangeEvent<unknown>) => {\n    const projection = event.target.value as TypeValidMapProjectionCodes;\n\n    // set basemap to no geom to clean up the view\n    setBasemap('nogeom');\n    setMapProjection(projection as TypeValidMapProjectionCodes);\n\n    // get view status (center and projection) to calculate new center\n    const currentView = myMap.getView();\n    const currentCenter = currentView.getCenter();\n    const currentProjection = currentView.getProjection().getCode();\n    const newCenter = api.projection.transformPoints(currentCenter, currentProjection, 'EPSG:4326')[0];\n    const newProjection = event.target.value as TypeValidMapProjectionCodes;\n\n    const newView: TypeViewSettings = {\n      zoom: currentView.getZoom() as number,\n      minZoom: currentView.getMinZoom(),\n      maxZoom: currentView.getMaxZoom(),\n      center: newCenter as [number, number],\n      projection: newProjection,\n    };\n\n    // set new view and basemaps array (with selected basemap)\n    myMap.setView(newView);\n    createBasemapArray(projection);\n\n    // emit an event to let know map view projection as changed\n    api.event.emit(mapViewProjectionPayload(api.eventNames.MAP.EVENT_MAP_VIEW_PROJECTION_CHANGE, mapId, projection));\n  };\n\n  /**\n   * load existing basemaps and create new basemaps\n   */\n  useEffect(() => {\n    createBasemapArray(mapProjection);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      {canSwichProjection && (\n        <Select\n          fullWidth\n          labelId=\"projection-label\"\n          value={mapProjection}\n          onChange={setSelectedProjection}\n          label=\"Projection\"\n          style={{\n            display: config.canSwichProjection ? 'flex' : 'none',\n          }}\n          inputLabel={{\n            id: 'projection-label',\n          }}\n          menuItems={projections.map((value: number) => ({\n            key: value,\n            item: {\n              value,\n              children: `EPSG:${value}`,\n            },\n          }))}\n        />\n      )}\n      {basemapList.map((basemap: TypeBasemapProps) => {\n        return (\n          <Card\n            tabIndex={0}\n            classes={{ root: classes.basemapCard }}\n            className={basemap.basemapId === activeBasemapId ? 'active' : ''}\n            onClick={() => setBasemap(basemap.basemapId as string)}\n            onKeyPress={() => setBasemap(basemap.basemapId as string)}\n            key={basemap.basemapId}\n            title={basemap.name}\n            contentCard={\n              <>\n                {typeof basemap.thumbnailUrl === 'string' && (\n                  <img src={basemap.thumbnailUrl} alt={basemap.altText} className=\"basemapCardThumbnail\" />\n                )}\n                {Array.isArray(basemap.thumbnailUrl) &&\n                  basemap.thumbnailUrl.map((thumbnail: string, index: number) => {\n                    // eslint-disable-next-line react/no-array-index-key\n                    return <img key={index} src={thumbnail} alt={basemap.altText} className=\"basemapCardThumbnail\" />;\n                  })}\n                <div className=\"basemapCardThumbnailOverlay\" />\n              </>\n            }\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import {\n  Cast,\n  AbstractPlugin,\n  TypePluginOptions,\n  TypeIconButtonProps,\n  TypeButtonPanel,\n  TypeWindow,\n  toJsonObject,\n  TypePanelProps,\n  TypeJsonObject,\n  AnySchemaObject,\n} from 'geoview-core';\n\nimport { BasemapPanel } from './basemap-panel';\nimport schema from '../schema.json';\nimport defaultConfig from '../default-config-basemap-panel.json';\n\nconst w = window as TypeWindow;\n\n/**\n * Create a class for the plugin instance\n */\nclass BasemapPanelPlugin extends AbstractPlugin {\n  // store the created button panel object\n  buttonPanel: TypeButtonPanel | null;\n\n  constructor(pluginId: string, props: TypePluginOptions) {\n    super(pluginId, props);\n    this.buttonPanel = null;\n  }\n\n  /**\n   * Return the package schema\n   *\n   * @returns {AnySchemaObject} the package schema\n   */\n  schema = (): AnySchemaObject => schema;\n\n  /**\n   * Return the default config for this package\n   *\n   * @returns {TypeJsonObject} the default config\n   */\n  defaultConfig = (): TypeJsonObject => toJsonObject(defaultConfig);\n\n  /**\n   * translations object to inject to the viewer translations\n   */\n  translations = toJsonObject({\n    en: {\n      basemapPanel: 'Basemaps',\n    },\n    fr: {\n      basemapPanel: 'Fond de carte',\n    },\n  });\n\n  /**\n   * Added function called after the plugin has been initialized\n   */\n  added = (): void => {\n    const { configObj, pluginProps } = this;\n\n    const { mapId } = pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api, ui } = cgpv;\n      const { MapIcon } = ui.elements;\n      const { displayLanguage } = api.map(mapId);\n      // button props\n      const button: TypeIconButtonProps = {\n        id: 'basemapPanelButton',\n        tooltip: this.translations[displayLanguage].basemapPanel as string,\n        tooltipPlacement: 'right',\n        children: <MapIcon />,\n        visible: true,\n      };\n\n      // panel props\n      const panel: TypePanelProps = {\n        title: this.translations[displayLanguage].basemapPanel,\n        icon: '<i class=\"material-icons\">map</i>',\n        width: 350,\n        status: configObj?.isOpen as boolean,\n      };\n\n      // create a new button panel on the app-bar\n      this.buttonPanel = api.map(mapId).appBarButtons.createAppbarPanel(button, panel, null);\n      // set panel content\n      this.buttonPanel?.panel?.changeContent(<BasemapPanel mapId={mapId} config={configObj || {}} />);\n    }\n  };\n\n  /**\n   * Function called when the plugin is removed, used for clean up\n   */\n  removed(): void {\n    const { mapId } = this.pluginProps;\n\n    // access the cgpv object from the window object\n    const { cgpv } = w;\n\n    if (cgpv) {\n      // access the api calls\n      const { api } = cgpv;\n\n      if (this.buttonPanel) {\n        api.map(mapId).appBarButtons.removeAppbarPanel(this.buttonPanel.buttonPanelId);\n\n        // reset basemaps array\n        api.map(mapId).basemap.basemaps = [];\n        // reload default basemap\n        api.map(mapId).basemap.loadDefaultBasemaps();\n      }\n    }\n  }\n}\n\nexport default BasemapPanelPlugin;\n\nw.plugins = w.plugins || {};\nw.plugins['basemap-panel'] = Cast<AbstractPlugin>(BasemapPanelPlugin);\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n"],"names":["w","window","BasemapPanel","props","mapId","config","cgpv","ui","react","api","myMap","map","_ui$elements","elements","Select","Card","useState","useEffect","_useState","_useState2","_slicedToArray","basemapList","setBasemapList","_useState3","_useState4","activeBasemapId","setActiveBasemapId","_useState5","canSwichProjection","classes","makeStyles","theme","basemapCard","backgroundColor","palette","grey","A700","color","primary","light","display","flexDirection","backgroundClip","border","concat","basemapPanel","borderDefault","borderRadius","boxShadow","marginBottom","transition","header","fontSize","fontWeight","margin","padding","height","width","order","position","objectFit","top","left","overlayDefault","cursor","borderColor","borderHover","overlayHover","borderActive","overlayActive","useStyles","projections","supportedProjections","obj","projectionCode","_useState7","mapFeaturesConfig","viewSettings","projection","_useState8","mapProjection","setMapProjection","setBasemap","basemapId","basemap","createBasemapArray","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","basemapsArray","isInit","configBasemapOptions","configBasemap","_loop","basemapIndex","_loop2","_basemapIndex","_context3","prev","next","toJsonObject","find","basemaps","basemapOptions","createCoreBasemap","sent","customBasemap","_context","_isEqual","customBasemaps","createCustomBasemap","prevArray","_toConsumableArray","stop","length","delegateYield","id","_context2","coreBasemaps","shaded","labeled","_x","apply","arguments","_jsxs","children","_jsx","fullWidth","labelId","value","onChange","event","target","currentView","getView","currentCenter","getCenter","currentProjection","getProjection","getCode","newCenter","transformPoints","newProjection","newView","zoom","getZoom","minZoom","getMinZoom","maxZoom","getMaxZoom","center","setView","emit","mapViewProjectionPayload","eventNames","MAP","EVENT_MAP_VIEW_PROJECTION_CHANGE","label","style","inputLabel","menuItems","key","item","tabIndex","root","className","onClick","onKeyPress","title","name","contentCard","_Fragment","thumbnailUrl","src","alt","altText","Array","isArray","thumbnail","index","BasemapPanelPlugin","_AbstractPlugin","_inherits","_super","_createSuper","pluginId","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","schema","defaultConfig","en","fr","_assertThisInitialize","configObj","pluginProps","_this$buttonPanel","MapIcon","displayLanguage","button","tooltip","translations","tooltipPlacement","visible","panel","icon","status","isOpen","buttonPanel","appBarButtons","createAppbarPanel","changeContent","_createClass","this","removeAppbarPanel","buttonPanelId","loadDefaultBasemaps","AbstractPlugin","plugins","Cast","module","exports","array","predicate","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","argsTag","arrayTag","objectTag","hasOwnProperty","Object","prototype","object","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIndexOf","SetCache","arraySome","cacheHas","isPartial","arrLength","othLength","arrStacked","get","othStacked","result","seen","undefined","set","arrValue","othValue","compared","othIndex","push","getAllKeys","objProps","objLength","objStacked","skipCtor","objValue","objCtor","constructor","othCtor"],"sourceRoot":""}